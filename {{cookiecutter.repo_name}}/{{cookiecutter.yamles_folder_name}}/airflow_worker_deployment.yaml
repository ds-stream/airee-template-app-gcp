apiVersion: apps/v1
kind: Deployment
metadata:
  namespace: {{cookiecutter.namespace}}
  name: worker-deployment
spec:
  {% if cookiecutter.airflow_performance == 'small' -%}
  replicas: 2
  {% elif cookiecutter.airflow_performance == 'standard' -%}
  replicas: 4
  {% else -%}
  replicas: 8
  {%- endif %}
  selector:
    matchLabels:
      app: airflow-worker
  strategy:
    type: Recreate
  template:
    metadata:
      labels:
        app: airflow-worker
    spec:
      nodeSelector:
        "purpose": "worker"
      tolerations:
      - key: "purpose"
        operator: "Equal"
        value: "worker"
        effect: "NoSchedule"
      containers:
      - name: airflow-worker
        image: airflow-scheduler-worker
        imagePullPolicy: Always
        command: ["/bin/sh"]
        args: ["-c","airflow celery worker"]
        resources:
{% if cookiecutter.airflow_performance == 'small' -%}
{% include "{{cookiecutter.yamles_folder_name}}/airflow_mode_config/small/worker.cfg" %}
{% elif cookiecutter.airflow_performance == 'standard' -%}
{% include "{{cookiecutter.yamles_folder_name}}/airflow_mode_config/standard/worker.cfg" %}
{% elif cookiecutter.airflow_performance == 'large' -%}
{% include "{{cookiecutter.yamles_folder_name}}/airflow_mode_config/large/worker.cfg" %}
{%- endif %}
        env:
        - name: AIRFLOW__LOGGING__BASE_LOG_FOLDER
          value: /opt/airflow/airflow_logs
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_REPOSITORY
          value: gcr.io/{{cookiecutter.project_id}}/airflow
        - name: AIRFLOW__KUBERNETES__WORKER_CONTAINER_TAG
          value: latest
        - name: AIRFLOW__KUBERNETES__NAMESPACE
          value: {{cookiecutter.namespace}}
        volumeMounts:
          - mountPath: /opt/airflow/airflow_logs
            name: airflow-logs
      securityContext:
        runAsUser: 50000
        fsGroup: 50000
      volumes:
        - name: airflow-logs
          persistentVolumeClaim:
            claimName: nfs-pvc

