name: Build image worker

on:
  workflow_dispatch:

jobs:
  rebuild_image_worker:
    runs-on: [self-hosted,{{cookiecutter.labels}}]
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Set default project
      run: gcloud config set project "{{cookiecutter.project_id}}"
    - name: Authorization docker
      run: gcloud auth configure-docker gcr.io
    - name: Get timestamp
      run: echo "TIMESTAMP_IMAGES=$(date "+%Y%m%d%H%M")" >> $GITHUB_ENV;
    {% if cookiecutter.nfs_dags==None -%}
    - name: Clone workspace repo
      run: rm -rf dags; git clone https://oauth2:{% raw %}${{ secrets.TF_VAR_GITHUB_TOKEN }}{% endraw %}@github.com/{{cookiecutter.org}}/{{cookiecutter.workspace}}_workspace_data_{{cookiecutter.env}}.git dags
    - name: Move dags
      run: rm -rf app/dags 2>/dev/null; mv dags/dags app/.
    {%- endif %}
    - name: Create key and cert file
      run: |
        gcloud secrets versions access latest --secret="{{cookiecutter.cert_name}}" > app/certificate.crt
        gcloud secrets versions access latest --secret="{{cookiecutter.key_name}}" > app/key.key 
    - name: Docker build
      run: docker build . --build-arg fernet_key=`gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-{{cookiecutter.env}}-fernet_key"` --build-arg conn_db=`gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-{{cookiecutter.env}}-postgress_conn_string"` --build-arg admin=`gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-{{cookiecutter.env}}-admin_password"` -t gcr.io/{{cookiecutter.project_id}}/{{cookiecutter.workspace}}-{{cookiecutter.env}}:worker-${TIMESTAMP_IMAGES}00Z
    - name: Docker push
      run: docker push gcr.io/{{cookiecutter.project_id}}/{{cookiecutter.workspace}}-{{cookiecutter.env}}:worker-${TIMESTAMP_IMAGES}00Z
