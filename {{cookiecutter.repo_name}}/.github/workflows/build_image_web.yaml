name: Build image webserver
on:
  push:
    paths:
      - 'app/**'

jobs:
  rebuild_image_webserver:
    runs-on: azure
    steps:
    - name: Checkout repository
      uses: actions/checkout@v3
    - name: Authorize GCP
      run: gcloud auth activate-service-account ${GOOGLE_IMPERSONATE_SERVICE_ACCOUNT} --key-file=${GOOGLE_APPLICATION_CREDENTIALS}
    - name: Set default project
      run: gcloud config set project "{{cookiecutter.project_id}}"
    - name: Authorization docker
      run: gcloud auth configure-docker gcr.io
    - name: Get timestamp
      run: echo "TIMESTAMP_IMAGES=$(date "+%Y%m%d%H%M")" >> $GITHUB_ENV;
    - name: Clone workspace repo
      run: rm -rf dags; git clone https://oauth2:${PAT_TOKEN}@github.com/{{cookiecutter.org}}/{{cookiecutter.workspace}}_workspace_data_{{cookiecutter.env}}.git dags
    - name: Move dags
      run: rm -rf app/dags 2>/dev/null; mv dags/dags app/.
    - name: Check secrets
      run: |
        repeat="true"
        wait_s=30
        max_retries=40
        while ${repeat} ; do
        if [ `gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-postgress_conn_string"` ] && [ `gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-admin_password"` ] && [ `gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-fernet_key"` ]
        then
          echo "Secrets - ok" && exit 0
        else
          ((i=i+1)) && echo "retries number ${i}" ; sleep ${wait_s}
          if [ ${i} -eq ${max_retries} ] ; then
            echo "The maximum number of retries has been reached" && exit 1
          fi
        fi
        done
    - name: Create key and cert file
      run: |
        gcloud secrets versions access latest --secret="{{cookiecutter.cert_name}}"` > app/aireetest.com.crt
        gcloud secrets versions access latest --secret="{{cookiecutter.key_name}}"` > app/aireetest.com.key
    - name: Docker build
      run: docker build . --build-arg fernet_key=`gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-fernet_key"` --build-arg conn_db=`gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-postgress_conn_string"` --build-arg admin=`gcloud secrets versions access latest --secret="{{cookiecutter.workspace}}-admin_password"` -t gcr.io/{{cookiecutter.project_id}}/{{cookiecutter.workspace}}:web-${TIMESTAMP_IMAGES}00Z
    - name: Docker push
      run: docker push gcr.io/{{cookiecutter.project_id}}/{{cookiecutter.workspace}}:web-${TIMESTAMP_IMAGES}00Z
